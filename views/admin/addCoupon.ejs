<%- include("../../views/partials/admin/header") %>
<style>
 .col-md-3 {
   padding: 20px;
   border: 1px solid #ddd;
   border-radius: 10px;
   margin: 10px;
 }

 .error-message {
   color: red;
   margin-top: 5px;
 }

 .form-label {
   margin-bottom: 8px;
 }

 .form-control {
   width: 100%;
   padding: 8px;
   margin-bottom: 10px;
   border: 1px solid #ccc;
   border-radius: 5px;
   box-sizing: border-box;
 }

 .d-grid {
   margin-top: 20px;
 }

 .btn-primary {
   background-color: #007bff;
   color: #fff;
   border: 1px solid #007bff;
   border-radius: 5px;
   padding: 10px 20px;
   cursor: pointer;
 }

 .btn-primary:hover {
   background-color: #0056b3;
   border-color: #0056b3;
 }

 </style>
<section class="content-main container " style="margin-left: 19%; padding-top: 5%;">
 <div class="content-header">
   <div>
     <h2 class="content-title card-title">Coupons</h2>
   </div>
 </div>
 <div class="card">
   <div class="card-body">
     <div class="row">
       <div class="col-md-3">
         <form method="post" action="/admin/createCoupon" id="couponForm">
           <body onload="setDefaultStartDate()"></body>
             <div class="mb-4">
               <label for="coupon-name" class="form-label">Coupon Name</label>
               <input
                 type="text"
                 id="coupon-name"
                 name="couponName"
                 placeholder="Type here"
                 class="form-control"
               />
               <div id="error-coupon-name" class="error-message"></div>
             </div>
             <div>
               <label for="startingDate" class="form-label">Start Date</label>
               <input
                 type="date"
                 name="startDate"
                 class="form-control"                
                 id="startingDate"
               />
               <div id="error-start-date" class="error-message"></div>
             </div>
             <div>
               <label for="expiringDate" class="form-label">End Date</label>
               <input
                 type="date"
                 name="endDate"
                 class="form-control"
                 id="expiringDate"        
               />
               <div id="error-end-date" class="error-message"></div>
             </div>         
             <div>
              <label for="offerType" class="form-label">Select Offer Type</label>
              <select id="offerType" class="form-control">
                  <option value="">-- Select Offer Type --</option>
                  <option value="percentage">Percentage Offer</option>
                  <option value="flat">Flat Discount</option>
              </select>
          </div>

          <!-- Percentage Offer Fields -->
          <div id="percentageFields" style="display: none;">
              <label for="percentageOffer" class="form-label">Percentage Offer</label>
              <input type="number" id="percentageOffer" name="percentageOffer" class="form-control" min="1" max="100" placeholder="%" />
              <div id="error-percentage-offer" class="error-message text-danger"></div>         
              <label for="minAmount" class="form-label mt-2">Minimum Purchase Amount</label>
              <input type="number" id="minAmount" name="minAmount" class="form-control" min="1" />
              <div id="error-min-amount" class="error-message text-danger"></div>
              <label for="maxAmount" class="form-label mt-2">Maximum  discount</label>
              <input type="number" id="maxAmount" name="maxAmount" class="form-control" min="1" />
              <div id="error-max-amount" class="error-message text-danger"></div>
          </div>
          
          <!-- Flat Discount Fields -->
          <div id="flatFields" style="display: none;">
              <label for="flatAmount" class="form-label">Flat Discount</label>
              <input type="number" id="flatAmount" name="flatAmount" class="form-control" min="1" placeholder="â‚¹" />
              <div id="error-percentage-offer" class="error-message text-danger"></div>
              <div id="error-flat-amount" class="error-message text-danger"> </div>
              <label for="minPurchase" class="form-label mt-2">Minimum Purchase Amount</label>
              <input type="number" id="minPurchase" name="minPurchase" class="form-control" min="1" />
              <div id="error-min-purchase" class="error-message text-danger"></div>
          </div>
             <div class="d-grid">
               <button
                 class="btn btn-primary mt-20"
                 onclick="validateForm(event)"
                 type="submit"
               >
                 Add Coupon
               </button>
               <button
                 class="btn btn-warning mt-20"   
               ><a href="/admin/coupon" class="text-light">Cancel</a> 
               </button>
             </div>
             <div id="err-msg" class="error-message"></div>
           </body>
         </form>
       </div>
     </div>
   </div>
 </div>
</section>

<!-- script for handling coupon type -->
<script>
  let offerType;
  document.getElementById("offerType").addEventListener("change", function () {
       offerType = this.value;
      let percentageFields = document.getElementById("percentageFields");
      let flatFields = document.getElementById("flatFields");
      if (offerType === "percentage") {
          percentageFields.style.display = "block";
          flatFields.style.display = "none";
      } else if (offerType === "flat") {
          flatFields.style.display = "block";
          percentageFields.style.display = "none";
      } else {
          percentageFields.style.display = "none";
          flatFields.style.display = "none";
      }
  });
  </script>
  
<!-- script for form validation and ajax request -->
<script>

  //function for form validation and ajax requests
  function validateForm(e) {
      e.preventDefault();
      let form = document.getElementById("couponForm");

      document.querySelectorAll(".error-message").forEach(el => el.innerHTML = "");

      //form values for validation
      const sDate = document.getElementsByName("startDate")[0].value;
      const eDate = document.getElementsByName("endDate")[0].value;
      const offerType = document.getElementById("offerType").value;

      // Percentage Discount Fields
      let percentageOffer = document.getElementsByName("percentageOffer")[0].value;
      const minAmount = document.getElementsByName("minAmount")[0].value;
      const maxAmount = document.getElementsByName("maxAmount")[0].value;

      // Flat Discount Fields
      const flatAmount = document.getElementsByName("flatAmount")[0].value;
      const minPurchase = document.getElementsByName("minPurchase")[0].value;

      // Validate Offer Type  
      if (offerType === "percentage") {
          if (!percentageOffer) {
              document.getElementById("error-percentage-offer").innerHTML = "Percentage Offer is required";
              return false;
          }
          if (percentageOffer <= 0 || percentageOffer > 100) {
              document.getElementById("error-percentage-offer").innerHTML = "Percentage Offer should be between 1 and 100";
              return false;
          }
          if (!minAmount) {
              document.getElementById("error-min-amount").innerHTML = "Minimum Purchase Amount is required";
              return false;
          }
          if (!maxAmount) {
              document.getElementById("error-max-amount").innerHTML = "Maximum discount is required";
              return false;
          }
          if (parseFloat(minAmount) < parseFloat(maxAmount)) {
              document.getElementById("error-min-amount").innerHTML = "Minimum purchase amount should be greater than or equal to Maximum discount";
              return false;
          }
      } else if (offerType === "flat") {
          if (!flatAmount) {
              document.getElementById("error-flat-amount").innerHTML = "Flat discount is required";
              return false;
          }
          if (flatAmount <= 0) {
              document.getElementById("error-flat-amount").innerHTML = "Flat discount should be greater than 0";
              return false;
          }
          if (!minPurchase) {
              document.getElementById("error-min-purchase").innerHTML = "Minimum Purchase is required";
              return false;
          }
          if(parseFloat(flatAmount) > parseFloat(minPurchase)) {
            document.getElementById("error-flat-amount").innerHTML = "Flat discount should be less than or equal to Minimum purchase amount";
              return false;
          }
      }

      // Date Validation
      const sDateObj = new Date(sDate);
      const eDateObj = new Date(eDate);
      const todayDateObj = new Date();
      todayDateObj.setHours(0, 0, 0, 0);

      if (!eDate) {
          document.getElementById("error-end-date").innerHTML = "End date is required";
          return false;
      }
      if (sDateObj > eDateObj) {
          document.getElementById("error-end-date").innerHTML = "End date should be after the start date";
          return false;
      }
      if (sDateObj < todayDateObj) {
          document.getElementById("error-start-date").innerHTML = "Starting date should be greater than or equal to today's date";
          return false;
      }

      // Coupon Name Validation
      let name = document.getElementsByName("couponName")[0].value;
      const nameRegex = /^[A-Za-z0-9\s]{1,50}$/; 
      if (!nameRegex.test(name)) {
          document.getElementById("error-coupon-name").innerHTML = "Coupon Name should only contain letters, numbers, and spaces";
          return false;
      }
    
      percentageOffer = percentageOffer>0?percentageOffer:0;
      let offeredPrice = percentageOffer>0?maxAmount:flatAmount;
      let minimumPrice = percentageOffer>0?minAmount:minPurchase;

      //ajax request for creating new coupon
      $.ajax({
        url: "/admin/createcoupon",
        method: "POST",
        data: {
          couponName: name,
          startDate: sDate,
          endDate: eDate,
          percentageOffer: percentageOffer, 
          offeredPrice:offeredPrice,
          minimumPrice: minimumPrice
        },
        success: function (response) {
          if(response.success){
            Swal.fire({
              icon: "success",
              title: "Coupon Created!",
              text: response.message,
              confirmButtonText: "OK",
            }).then(() => {
              window.location.href = "/admin/coupon"
            });
          }else{
            Swal.fire({
              icon: "error",
              title: "Error",
              text: response.message,
              confirmButtonText: "OK",
            });
          }
        }
      })
      return true;
  }

 // function for setting the default date 
 function setDefaultStartDate() {
      const today = new Date();
      const year = today.getFullYear();
      const month = (today.getMonth()+1).toString().padStart(2,"0");
      const day = today.getDate().toString().padStart(2,"0");
      const tomorrow = new Date(today);
      tomorrow.setDate(today.getDate() + 1);
      document.getElementsByName("startDate")[0].value = `${year}-${month}-${day}`;
      document.getElementsByName("expiringDate")[0].value = tomorrow.toISOString().split("T")[0];
  }
</script>
<%- include("../../views/partials/admin/footer") %>