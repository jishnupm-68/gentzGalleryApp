<%- include("../../views/partials/user/header") %>
  <style>
    .main-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }

    .shop-topbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .search-form {
      display: flex;
      align-items: center;
      background-color: #f1f1f1;
      border-radius: 25px;
      overflow: hidden;
      max-width: 250px;
      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    .search-input {
      flex: 1;
      padding: 8px 10px;
      font-size: 14px;
      border: none;
      outline: none;
      background-color: transparent;
    }

    .search-button {
      padding: 8px 15px;
      background-color: #1e918b;
      color: #fff;
      border: none;
      cursor: pointer;
      font-size: 14px;
      border-radius: 15px;
      margin-right: 5px;
      transition: background-color 0.3s, transform 0.2s;
    }

    .search-button:hover {
      background-color: #0056b3;
      transform: scale(1.05);
    }

    .sidebar {
      padding: 20px;
      border: 1px solid #ddd;
      background-color: #f9f9f9;
      border-radius: 8px;
      margin-bottom: 20px;
      width: 250px;
      text-align: center;
    }

    .filter-section {
      margin-bottom: 20px;
    }

    .filter-title {
      font-weight: bold;
      margin-bottom: 10px;
      font-size: 16px;
      color: #333;
    }

    .filter-item {
      margin: 5px 0;
    }

    .filter-item a {
      text-decoration: none;
      color: #333;
    }

    .filter-item a:hover {
      color: #007bff;
    }

    .product-list-container {
      display: flex;
      gap: 20px;
    }

    .product-grid {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      width: calc(100% - 270px);
    }

    .product-card {
      width: calc(33.333% - 20px);
      border: 1px solid #ddd;
      padding: 15px;
      border-radius: 8px;
      text-align: center;
      position: relative;
    }

    .product-card img {
      max-width: 100%;
      height: auto;
      border-radius: 5px;
    }

    .wishlist-btn {
      position: absolute;
      top: 8px;
      right: 8px;
      background-color:    rgba(237, 247, 247, 0.8);
      color: #fff;
      padding: 8px;
      border-radius: 50%;
      cursor: pointer;
    }

    .add-to-cart-btn {
      background-color: #1e918b;
      color: #fff;
      padding: 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      width: 100%;
      margin-top: 10px;
    }

    .pagination {
      display: flex;
      justify-content: center;
      gap: 10px;
      margin: 20px 0;
    }

    .pagination a {
      padding: 8px 12px;
      background-color: #f0f0f0;
      border: 1px solid #ddd;
      color: #333;
      text-decoration: none;
    }

    .pagination .active {
      background-color: #007bff;
      color: #fff;
    }

    .price-filter {
      padding: 10px;
      background-color: #f9f9f9;
      border-radius: 8px;
      margin-top: 20px;
    }

    .price-filter .price-options {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    .price-button {
      padding: 12px 20px;
      background-color: #f1f1f1;
      color: #333;
      border: 1px solid #ddd;
      border-radius: 30px;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.2s;
      text-align: center;
      font-size: 14px;
    }

    .price-button:hover {
      background-color: #007bff;
      color: white;
      transform: scale(1.05);
    }

    .price-button:active {
      transform: scale(0.95);
    }

    .category-brand-container {
      text-align: center;
    }
  </style>

  <div class="main-container">
    <section class="shop-page container">
      <div class="shop-topbar">
        <div class="search-bar">
          <form action="/search" method="POST" class="search-form">
            <input type="text" name="query" placeholder="Search items..." class="search-input" />
            <button type="submit" class="search-button btn">Search</button>
          </form>
        </div>
      </div>

      <div class="product-list-container">

        <aside class="sidebar">
          <div class="filter-section">
            <div class="filter-title">Categories</div>
            <div class="category-brand-container">
              <ul>
                <% if (category && category.length> 0) { %>
                  <% for (let i=0; i < category.length; i++) { %>
                    <li class="filter-item">
                      
                        <a href="#" class="ajax-filter" data-filter="category" data-value="<%= category[i]._id %>">

                        <%= category[i].name %>
                      </a>
                    </li>
                  <% } %>
                      <% } else { %>
                        <li>No categories available</li>
                      <% } %>
              </ul>
            </div>
          </div>
          <div class="filter-section">
            <div class="filter-title">Brands</div>
            <div class="category-brand-container">
              <ul>
                <% if (brand && brand.length> 0) { %>
                  <% for (let i=0; i < brand.length; i++) { %>
                    <li class="filter-item">
                      <a href="/filter?brand=<%= brand[i]._id %>">
                        <%= brand[i].brandName %>
                      </a>
                    </li>
                    <% } %>
                      <% } else { %>
                    <li>No brands available</li>
                  <% } %>
              </ul>
            </div>
          </div>

          <div class="price-filter">
            <div class="filter-title">Filter by Price</div>
            <form id="price-filter-form" method="GET" action="/filter">

                  <a href="/filter?price&gt=0&lt=500"> <button type="button" name="price" value="under-500"
                    class="price-button">Under ₹500</button></a>

              <a href="/filter?price&gt=500&lt=2000"> <button type="button" name="price" value="500-1000"
                  class="price-button">₹500 - ₹2000</button></a>
              <a href="/filter?price&gt=2000&lt=5000"> <button type="button" name="price" value="1000-1500"
                  class="price-button">₹2000 - ₹5000</button></a>
              <a href="/filter?price&gt=5000&lt=50000"> <button type="button" name="price" value="above-1500"
                  class="price-button">Above ₹5000</button></a>
            </form>
          </div>
          <div class="filter-section">
            <div class="filter-title"></div>
            <div class="category-brand-container">
              <ul>
                <li class="filter-item">
                  <a href="/filter?filter=Popularity">Popularity</a>
                </li>
                <li class="filter-item">
                  <a href="/filter?filter=New arrivals">New arrivals</a>
                </li>

                <li class="filter-item">
                  <a href="/filter?filter=Featured">Featured</a>
                </li>
                <li class="filter-item">
                  <a href="/filter?filter=Low to High">Price: Low to High</a>
                </li>
                <li class="filter-item">
                  <a href="/filter?filter=High to Low">Price: High to Low</a>
                </li>               
                <li class="filter-item">
                  <a href="/filter?filter=aA-zZ">aA-zZ</a>
                </li>
                <li class="filter-item">
                  <a href="/filter?filter=zZ-aA">zZ-aA</a>
                </li>              
                <li class="filter-item">
                  <label for="showOutOfStock">
                    <input 
                      onclick="toggleOutOfStock()" 
                      type="checkbox" 
                      id="showOutOfStock" 
                      class="p-3" 
                      name="showOutOfStock" 
                      style="height: 10px; width: 10px;"
                    />
                    <span id="stockLabel">Include Out of Stock</span>
                  </label>
                </li>
              </ul>
              <div class="price-filter">
                <div class="filter-title">Filter by Ratings</div>
                <li class="filter-item">
                  <a href="/filter?filter=4">4<i class="fi-rs-star"></i> and above</a>
                </li>
                <li class="filter-item">
                  <a href="/filter?filter=3">3<i class="fi-rs-star"></i> and above</a>
                </li>
                <li class="filter-item">
                  <a href="/filter?filter=2">2<i class="fi-rs-star"></i> and above</a>
                </li>
                <li class="filter-item">
                  <a href="/filter?filter=1">1<i class="fi-rs-star"></i> and above</a>
                </li>
                </div>
            </div>
          </div>
        </aside>

       

        <main class="product-grid">
          <% if (products && products.length> 0) { %>
            <% for (let i=0; i < products.length; i++) { %>
              <div class="product-card">
                <a href="#" class="wishlist-btn" onclick="addToWishlist('<%= products[i]._id %>')">
                  <i class="fas fa-heart"></i>
              </a>
              
 
                <a href="/productDetails?id=<%= products[i]._id %>">

                  <img src="/uploads/product-imagesResized/<%= products[i].productImage[0] %>"
                    alt="<%= products[i].productName %>" />
                  <h4>
                    <%= products[i].productName %>
                  </h4>
                  <p>Brand: <%= products[i].brand %>
                  </p>
                  <p> Price: ₹<%= products[i].salePrice.toLocaleString('en-IN') %>
                      <span class="text-muted">
                        <strike>₹<%= products[i].regularPrice.toLocaleString('en-IN') %></strike>
                      </span>
                  </p>
                  <% if (products[i].quantity > 0) { %>
                  <p>stock: <%= products[i].quantity %>
                  </p>
                  <% } else { %>
                  <p class="text-danger">Out of stock</p>
                  <% } %>
                </a>
                <% if(products[i].quantity > 0) {%>
               
                <form action="/addToCart" method="post">
                  <input type="hidden" name="productId" value="<%= products[i]._id %>">
                  <input type="hidden" name="quantity" value="1">
                  <input type="hidden" name="price" id="price" value="<%= products[i].salePrice %>">
                  <button type="submit" class="btn add-to-cart-btn" style="background-color: #088178;">Add to Cart</button>
             </form>

                <% }else{ %>
                  <button class="add-to-cart-btn btn" onclick="window.location.href='/productDetails?id=<%= products[i]._id %>'">Currently Unavailable</button>
                <% } %>
               
                <!-- <div class="product-extra-link2">
                
                  <a aria-label="Add To Wishlist" class="action-btn hover-up" href="#"><i class="fi-rs-heart"></i></a>
              </div> -->
              </div>
              <% } %>
                <% } else { %>
                  <p>No products available</p>
                  <% } %>
                  
        </main>
      </div>

      <!-- pagination -->
      <div class="container mt-3">
        <nav aria-label="Page navigation">
          <ul class="pagination justify-content-center mb-20" style="margin-right: 200px;">
            <% for (let i=1; i <=totalPages; i++) { %>
              <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
                  <!-- <a class="page-link ajax-pagination" href="?page=<%= i %>" data-page="<%= i %>">
                    <%= i %>
                  </a>    -->
                  <a class="page-link ajax-pagination" href="?page=<%= i %>" data-page="<%= i %>">
                    <%= i %>
                  </a>     
              </li>
              <% } %>
          </ul>
        </nav>
      </div>
    </section>
  </div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <script>
let filterType ;
let filterValue ;
$(document).ready(function() {
    // Pagination Click Event
    $(document).on("click", ".ajax-pagination", function(e) {
      console.log("ajax first call")
        e.preventDefault();  // Prevent full-page reload

        let page = $(this).data("page"); // Get page number
        fetchProducts(page);
    });

    // Function to Fetch Products via AJAX
    function fetchProducts(page) {
      console.log("full href", window.location.href);
       let currentQuery  =window.location.search;
      let final;
      if(currentQuery.length>0){
        final = currentQuery+=("&page=" + page);
      }else{
        final = "?page=" + page;
      }
      console.log("ajax second call");
       
      
        $.ajax({
          
            //url: "/filter?page=" + page, // Call backend with page number

            url: `/filter${final}`,
            method: "GET",
            dataType: "html",  // Expect HTML response (product list)
            success: function(response) {
                console.log("ajax third call",response);
                $(".product-grid").html($(response).find(".product-grid").html()); // Update products
                $(".pagination").html($(response).find(".pagination").html()); // Update pagination
            },
            error: function(xhr, status, error) {
                console.error("AJAX Error:", xhr.responseText, status, error);
            }
        });
    }
});

$(document).on("click", ".ajax-filter", function(e) {
    e.preventDefault();

     filterType = $(this).data("filter");
     filterValue = $(this).data("value");

    $.ajax({
        url: `/filter?${filterType}=${filterValue}`,
        method: "GET",
        dataType: "html",
        success: function(response) {
            $(".product-grid").html($(response).find(".product-grid").html());
            $(".pagination").html($(response).find(".pagination").html());
        },
        error: function(xhr, status, error) {
            console.error("AJAX Error:", xhr.responseText, status, error);
        }
    });
});


function toggleOutOfStock() {
    const checkbox = document.getElementById("showOutOfStock");
    const label = document.getElementById("stockLabel");

    // Change label text based on checkbox state
    

    // Redirect to apply filter
    window.location.href = `/filter?filterOutOfStock=${checkbox.checked}`;
    label.textContent = checkbox.checked ? "Exclude Out of Stock" : "Include Out of Stock";
  }

  function addToWishlist(productId) {
        console.log("Function addtowishlist called with productid", productId);
        $.ajax({
            url: '/addToWishlist?id=' + productId,
            method: 'get',
            data: { productId: productId },

            success: function(response) {
                console.log("Response from server:", response);
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: response.message
                    });
                }else if(response.message=="Product already in wishlist"){
                    Swal.fire({
                        icon: 'success',
                        title: 'success',
                        text: response.message
                    })
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: response.message
                    })
                }
            },
            error: function(xhr, status, error) {
                console.error("AJAX error:", xhr.responseText, status, error);
                Swal.fire({
                    icon: 'error',
                    title: 'Something went wrong',
                    text: 'Please try again later.'
                });
            }
        })
    }
    



    document.addEventListener("DOMContentLoaded", function () {
    const filterItems = document.querySelectorAll(".ajax-filter");
    const outOfStockCheckbox = document.querySelector("#showOutOfStock");

    function applyFilters() {
        let filters = {};

        // Collect selected filters
        document.querySelectorAll(".ajax-filter.active").forEach(item => {
            const filterType = item.dataset.filter;
            const filterValue = item.dataset.value || "";

            if (filterType === "price") {
                filters["price_gt"] = item.dataset.gt;
                filters["price_lt"] = item.dataset.lt;
            } else {
                filters[filterType] = filterValue;
            }
        });

        // Add Out of Stock filter if checked
        if (outOfStockCheckbox && outOfStockCheckbox.checked) {
            filters["outOfStock"] = "true";
        }

        fetch(`/filter?${new URLSearchParams(filters)}`, {
            method: "GET",
            headers: { "X-Requested-With": "XMLHttpRequest" }
        })
        .then(response => {console.log("response" , response); 
          return response.json()})
        .then(data => {
          console.log("fronfrontend ",data);
            updateProductList(data.products);
            updatePagination(data.totalPages, data.currentPage);
        })
        .catch(error => console.error("Error fetching filtered products:", error));
    }

    filterItems.forEach(item => {
        item.addEventListener("click", function (event) {
            event.preventDefault();

            // Toggle active class for styling
            this.classList.toggle("active");

            // Apply Filters
            applyFilters();
        });
    });

    if (outOfStockCheckbox) {
        outOfStockCheckbox.addEventListener("change", applyFilters);
    }
});

function updateProductList(products) {
    const productGrid = document.querySelector(".product-grid");
    productGrid.innerHTML = "";

    if (products.length === 0) {
        productGrid.innerHTML = "<p>No products available</p>";
        return;
    }

    products.forEach(product => {
        productGrid.innerHTML += `
            <div class="product-card">
                <a href="/productDetails?id=${product._id}">
                    <img src="/uploads/product-imagesResized/${product.productImage[0]}" alt="${product.productName}" />
                    <h4>${product.productName}</h4>
                    <p>Brand: ${product.brand}</p>
                    <p> Price: ₹${product.salePrice.toLocaleString("en-IN")} 
                        <span class="text-muted"><strike>₹${product.regularPrice.toLocaleString("en-IN")}</strike></span>
                    </p>
                </a>
            </div>
        `;
    });
}

function updatePagination(totalPages, currentPage) {
    const paginationContainer = document.querySelector(".pagination");
    paginationContainer.innerHTML = "";

    for (let i = 1; i <= totalPages; i++) {
        paginationContainer.innerHTML += `
            <li class="page-item ${i === currentPage ? "active" : ""}">
                <a class="page-link ajax-page" href="#" data-page="${i}">${i}</a>
            </li>
        `;
    }
}

</script>

<div id="product-list"></div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
  <%- include("../../views/partials/user/footer") %>