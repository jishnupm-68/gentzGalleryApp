<%- include("../../views/partials/user/header") %>
<main class="container">
    <section class="content-main">
        <div class="content-header">
            <div class="mt-1">
                <h2 class="content-title card-title">Order detail</h2>
                <p>Details for Order ID: <%= orders._id %></p>
                
                <input type="text" name="orderId" id="orderId" value="<%= orders._id %>" hidden>
            </div>
        </div>
        <div class="card-body">
            <!-- Customer Information -->
            <div class="row mb-10  order-info-wrap background-info">
                <div class="col-md-4">
                    <article class="icontext align-items-start ml-130">
                        <span class="icon icon-sm rounded-circle bg-primary-light">
                            <i class="material-icons text-primary person"></i>
                        </span>
                        <div class="text">
                            <h6 class="mb-1">Customer</h6>
                            <p class="mb-1">
                                <%= address.name %> <br> <%= address.phone %>
                            </p>
                        </div>
                    </article>
                </div>
                <!-- Order Information -->
                <div class="col-md-4">
                    <article class="icontext align-items-start ml-130">
                        <span class="icon icon-sm rounded-circle bg-primary-light">
                            <i class="text-primary material-icons md-local_shipping"></i>
                        </span>
                        <div class="text">
                            <h6 class="mb-1">Order info</h6>
                            <p class="mb-1">
                                Pay method: <%= orders.payment %> <br>
                                Pay Status: <%= orders.status %> 
                                <% if(orders.payment!=='cod' && orders.status=='Pending') {%>
                                    <button type="submit" onclick="retryPayment('<%=orders._id%>')" class="p-1 ml-2">Retry Payment?</button>
                                    <% } %>
                                
                                <br>
                                Order Status: <%= orders.orderedItems[0].productStatus %><br>
                                 Total: ₹<%= totalGrand.toLocaleString() %> <br>                               
                                Discount: ₹<%= discount.toLocaleString() %> <br>
                                Total Amount to be pay: ₹<%= orders.finalAmount.toLocaleString() %>
                            </p>
                        </div>
                    </article>
                </div>
                <!-- Delivery Information -->
                <div class="col-md-4">
                    <article class="icontext align-items-start ml-130">
                        <span class="icon icon-sm rounded-circle bg-primary-light">
                            <i class="text-primary material-icons md-place"></i>
                        </span>
                        <div class="text">
                            <h6 class="mb-1">Deliver to</h6>
                            <p class="mb-1">
                                Address: <%= address.landMark %>, <%= orders.address.city %> <br>
                                <%= address.state %>, <%= address.addressType %> <br>
                                <%= address.pincode %>
                            </p>
                            
                            <%if(orders.orderedItems[0].productStatus.trim()=="Delivered"){%>
                                <a href="" class="btn btn-sm" id="downloadInvoice">Download Invoice</a>
                            <%}%>
                        </div>
                    </article>
                </div>
            </div>
            <!-- Order Details Table -->
            <div class="row">
                <div class="col-lg">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr class="text-center">
                                    <th width="30%">Product</th>
                                    <th width="20%">Name</th>
                                    <th width="10%">Unit Price</th>
                                    <th width="10%">Quantity</th>
                                    <th class="text-center" width="10%" class="text-end">Total</th>
                                    <th width="10%">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (locals.orders) { %>
                                   
                                    <% orders.orderedItems.forEach((item) => {%>
                                        
                                       
                                   
                                        <tr>
                                            <input type="text" name="product" id="product" value="<%= item.product %>" style="display: none;">
                                            <td class="text-center">
                                                <a class="itemside" href="#">
                                                    <div class="left">
                                                        <img src="/uploads/product-imagesResized/<%= item.image %>" style="height: 7rem; width: 7rem;" class="img-xs" alt="Item">
                                                    </div>
                                                </a>
                                            </td>
                                            <td class="text-center">
                                                <div class="info">
                                                    <%= item.productName || item.productTitle %>
                                                </div>
                                            </td>
                                            <td class="text-center">
                                                ₹<%= item.price.toLocaleString() %>
                                            </td>
                                            <td class="text-center">
                                                <%= item.quantity %>
                                            </td>
                                            <td class="text-center">
                                                ₹<%=(parseInt(item.price) * parseInt(item.quantity)).toLocaleString()%>
                                            </td>

                                            <td class="text-center">
                                                <% if (item.productStatus == "Cancelled") { %>
                                                    <i class=" text-danger">Cancelled</i>
                                                <% } else { %>

                                                   
                                                    <% if(item.returnStatus=="Return request accepted") {%>
                                                    <p class="text-success"><%= item.returnStatus %></p>
                                                    <% }else if(item.returnStatus=="Return request rejected") {%>
                                                        <p class="text-danger"><%= item.returnStatus %></p>
                                                    <% }else{%>
                                                    <p class="text-success"><%= item.productStatus %></p>
                                                    <% }%>
                                                    <form action="" onsubmit="return false" >
                                                        <% if (item.productStatus.trim() === "Confirmed" || item.productStatus.trim() === "Processing"|| item.productStatus.trim()==="Pending") { %>
                                                        
                                                            <!-- Allow the user to cancel the order -->
                                                            <button type="submit" id="cancelButton<% item.product %>" class="btn " onclick=" handleDropdownChange('<%= item.product %>','<%= orders.payment%>', 'Cancelled')">Cancel</button>
                                                            
                                                        <% }%>
                                                        
                                                    </form>

                                                    <form action="" onsubmit="return false" >
                                                        <% if (item.productStatus.trim() === "Delivered" ) { %>
                                                        
                                                            <!-- Allow the user to return the order -->
                                                            <button type="submit" id="returnButton<% item.product %>" class="btn " onclick="  returnRequestOrder('<%= item.product %>','<%= orders._id %>')">Return</button>
                                                            
                                                        <% }%>
                                                          
                                                        
                                                    </form>
   
                                                <% } %>
                                            </td>

                                           <% }) %> 
                                        </tr>
                                    <% } %>
                               
                                <input type="hidden" name="" id="orderId" value="<%= orders._id %>">
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-lg-1"></div>
            </div>
        </div>
    </section>
</main>

<script src="assets/js/vendors/jquery-3.6.0.min.js"></script>
<script src="assets/js/vendors/bootstrap.bundle.min.js"></script>
<script src="assets/js/vendors/select2.min.js"></script>
<script src="assets/js/vendors/perfect-scrollbar.js"></script>
<script src="assets/js/vendors/jquery.fullscreen.min.js"></script>
<script src="assets/js/main.js" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/npm/easyinvoice/dist/easyinvoice.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>

    function retryPayment(orderId){
        Swal.fire({
            title: 'Retry Payment',
            text: 'Are you sure you want to Retry Payment?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, Retry it!',
           
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/retryPayment',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ orderId: orderId }),
                    success: (response) => {
                        console.log("response from order details", response,response.order)
                        if (response) {
                            {
                            console.log("response", response);
                            let orderAmount = response.order.finalAmount;
                           // console.log("final amount",response.order.finalAmount,orderAmount);
                            let order = response.orderId;
                            console.log("orderamount",orderAmount)
                            var options = {
                                "key": "rzp_test_2ntRCkhdtoc7jm",
                                "amount": orderAmount,
                                "currency": "INR",
                                "name": "GentzGallery",
                                "description": "Test Transaction",
                                "order_id": response.orderId,
                                "handler": function (response){
                                    console.log("Payment response",response, order)
                                    verifyPayment(response,order);
                                },
                                "prefill": {
                                    "name": response.user.name,
                                    "email": response.user.email,
                                    "contact": response.user.phone
                                },

                                "theme": {
                                    "color": "#5CFF9A"
                                }
                            }
                            var rzp1 = new Razorpay(options);
                            rzp1.on('payment.failed', function (response){
                                Swal.fire({
                                     title: 'Payment Failed!'+ response.error.code,
                                     text: response.error.description,
                                     icon: 'error',
                                     timer: 5000,
                                     showConfirmButton: false
                                     });
                                })
                            rzp1.open();

                        }
                         
                        }else{
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message
                            });
                        }
                    }
                })
            }
            
        })
        
    }

    function verifyPayment(response,order) {
        let orderId  =  document.getElementById("orderId").value;
        console.log("Payment response verifyPayment", orderId)
            let payment = response
            $.ajax({
                url: '/verifyPayment',
                method: 'post',
                data: {
                    response,
                    order,
                    orderId,

                }, success: (response) => {
                    if (response.success) {
                        
                        Swal.fire({
                            title: "Order success",
                            text: "order placed successfully",
                            icon: "success",
                            showCancelButton: true,
                            confirmButtonText: "view orders",
                            cancelButtonText: "continue shopping",
                            reverseButtons: true
                        }).then(function (result) {
                            if (result.value) {
                                console.log("paid ");
                                var orderDetailsUrl = `/orderDetails?id=${orderId}`;
                                location.href = orderDetailsUrl;
                            } else if (result.dismiss === "cancel") {
                                console.log("failed");
                                location.href = '/'
                            }
                        });
                    }

                }
            })
        }
function handleDropdownChange(productId,payment) {
  
    console.log("productId = ", productId.toString());
    var product = productId.toString();
    var selectedValue = 'cancel'
    console.log(selectedValue);
    if (selectedValue === "cancel") {
        console.log("calling toplevel confirmCancelOrder")
        confirmCancelOrder(product,payment);
    } else if (selectedValue == "returnrequest") {
        returnRequestOrder(product);
    }
}


function confirmCancelOrder(product,payment) {
    console.log("first function calling confirmCancelOrder")
    Swal.fire({
        title: 'Confirm Cancel Order',
        text: 'Are you sure you want to cancel this order?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, cancel it!',
       
    }).then((result) => {
        if (result.isConfirmed) {
            console.log('working');
            cancelOrder(product,payment);
        }
    });
}

function cancelOrder(product,payment) {
    const orderId = document.getElementById("orderId")
    console.log("second function calling cancelOrder")
    $.ajax({
        url: '/cancelOrder',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ productId: product, orderId: orderId.value , payment:payment}),
        success: (response) => {
            if (response.result.modifiedCount === 1) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: response.message
                });
                window.location.reload();

            }
        },
        error: (error) => {
            Swal.fire("Failed", error, "error")
            
        }
    });
}

function returnRequestOrder(product,orderId) {
    Swal.fire({
        title: 'Confirm Return Order',
        text: 'Are you sure you want to Return this order?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, Return it!',
       
    }).then((result) => {
        if (result.isConfirmed) {
            console.log('working');
            $.ajax({
        url: '/returnrequestOrder',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ productId: product, orderId:orderId }),
        success: (response) => {
            if (response.success) {
                Swal.fire({
                    icon:'success',
                    title: 'Success',
                    text: response.message,
                    timer:4000,
                    showConfirmButton: false
                })
                window.location.reload();
            }else{
                Swal.fire({
                    icon:'error',
                    title: 'Failed',
                    text: response.message,
                    timer:4000,
                    showConfirmButton: false
                })
                window.location.reload();
            }
        },
        error: (error) => {
            console.log(error)
            Swal.fire({
                icon:'error',
                title: 'Failed',
                text: error,
                timer:4000,
                showConfirmButton: false
            })
            window.location.reload();
        }
    });
            
        }
    });

    
}

document
      .getElementById("downloadInvoice")
      .addEventListener("click", async (event) => {
        event.preventDefault();
        try {
            const orderId = document.getElementById("orderId").value;
            console.log("orderId",orderId)
          const response = await fetch(`/downloadInvoice/?id=${orderId}`, {
            method: "get",
            // headers: {
            //   "Content-Type": "application/json",
            // },
            // // body:data,
            // body: JSON.stringify(salesData),
          });
          if (response.ok) {
            const blob = await response.blob();
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement("a");
            a.href = url;
            a.download = "report.pdf";
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            Swal.fire({
                title: 'Invoice downloaded!',
                text: response.message,
                icon:'success',
                timer: 4000,
                showConfirmButton: false,
              });
          } else {
            Swal.fire({
                title: 'Failed to download invoice!',
                text: response.message,
                icon:'error',
                timer: 4000,
                showConfirmButton: false,
              });        
            console.error("Failed to generate PDF");
          }
        } catch (error) {
          console.log(error.message);
        }
      });

</script>

<%- include("../../views/partials/user/footer") %>

